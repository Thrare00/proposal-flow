import { useState } from 'react';
import { 
  Search, 
  Users, 
  ClipboardList,
  Handshake,
  Bot,
  ChevronDown,
  ChevronRight
} from 'lucide-react';

const ProposalDevelopmentGuide = () => {
  // Get current date for MMDDYY format
  const getFormattedDate = () => {
    const now = new Date();
    const mm = String(now.getMonth() + 1).padStart(2, '0');
    const dd = String(now.getDate()).padStart(2, '0');
    const yy = String(now.getFullYear()).slice(-2);
    return `${mm}${dd}${yy}`;
  };

  const currentDate = getFormattedDate();
  const [expandedSections, setExpandedSections] = useState<Record<string, boolean>>({
    step1: true,
    step2: true,
    step3: true,
    step4: true,
    step5: true
  });

  const toggleSection = (sectionId: string) => {
    setExpandedSections(prev => ({
      ...prev,
      [sectionId]: !prev[sectionId]
    }));
  };

  const steps = [
    {
      id: 'step1',
      title: 'Agency Goal Alignment (Using ChatGPT)',
      icon: <Search className="w-4 h-4" />,
      content: (
        <div className="space-y-4">
          <div className="bg-gray-50 dark:bg-gray-800 p-4 rounded-md">
            <p className="font-medium mb-2">Task:</p>
            <p>
              "Use ChatGPT to research [Agency]'s goals relevant to this solicitation. Speak directly to [Agency]'s objectives (e.g., DoD sustainability goals for recycling companies). Save output to <code className="px-1 py-0.5 bg-gray-100 dark:bg-gray-700 rounded">/Shared/Research/[Agency]_Goals_${currentDate}.txt</code> in MLA format."
            </p>
          </div>
        </div>
      )
    },
    {
      id: 'step2',
      title: 'Value Proposition Workshop',
      icon: <Users className="w-4 h-4" />,
      content: (
        <div className="space-y-4">
          <div className="bg-gray-50 dark:bg-gray-800 p-4 rounded-md">
            <p className="font-medium mb-2">Task:</p>
            <p>"Discuss with agents:</p>
            <ul className="list-disc pl-6 mt-2 space-y-2">
              <li>'How can we increase our value for this requirement?'</li>
              <li>'What goals is [Agency] trying to accomplish?'</li>
            </ul>
            <p className="mt-2">Example: Highlight rare earth processing's role in [Agency]'s clean energy targets."</p>
          </div>
        </div>
      )
    },
    {
      id: 'step3',
      title: 'Evaluation-Centric TOC Drafting',
      icon: <ClipboardList className="w-4 h-4" />,
      content: (
        <div className="space-y-4">
          <div className="bg-gray-50 dark:bg-gray-800 p-4 rounded-md">
            <p className="font-medium mb-2">Task:</p>
            <p>"Create a TOC mirroring the solicitation's evaluation criteria. Label sections exactly as the agency does (e.g., '<strong>Section 3.1: Technical Approach</strong>'). Use MLA formatting."</p>
          </div>
        </div>
      )
    },
    {
      id: 'step4',
      title: 'Partner Integration',
      icon: <Handshake className="w-4 h-4" />,
      content: (
        <div className="space-y-4">
          <div className="bg-gray-50 dark:bg-gray-800 p-4 rounded-md">
            <p className="font-medium mb-2">Task:</p>
            <p>"Align RARE EARTH LTD (with [Name of Company]'s <em>undisclosed partnership</em>) to solicitation requirements. Use the agency's exact font/style (e.g., 12pt Times New Roman)."</p>
          </div>
        </div>
      )
    },
    {
      id: 'step5',
      title: 'Claude AI Optimization',
      icon: <Bot className="w-4 h-4" />,
      content: (
        <div className="space-y-4">
          <div className="bg-gray-50 dark:bg-gray-800 p-4 rounded-md">
            <p className="font-medium mb-2">Task:</p>
            <p>"Upload evaluation criteria to Claude."</p>
            <p className="mt-2">"For each section:</p>
            <ul className="list-disc pl-6 mt-2 space-y-2">
              <li>Replace negatives ('limited capacity' → 'strategically allocated resources')</li>
              <li>Use active voice ('We deliver' not 'It will be delivered')"</li>
            </ul>
            <p className="mt-2">"Save revisions to <code className="px-1 py-0.5 bg-gray-100 dark:bg-gray-700 rounded">/Shared/Proposal_Edits_${currentDate}.docx</code>."</p>
          </div>
        </div>
      )
    }
  ];

  return (
    <div className="max-w-4xl mx-auto py-8 px-4">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900 dark:text-white mb-2">Proposal Development Guide</h1>
        <p className="text-gray-600 dark:text-gray-400">
          Step-by-step guide for developing winning proposals
        </p>
      </div>

      <div className="space-y-4">
        {steps.map((step) => (
          <div key={step.id} className="bg-white dark:bg-gray-800 rounded-lg shadow">
            <button
              className="w-full flex items-center justify-between p-4 text-left"
              onClick={() => toggleSection(step.id)}
            >
              <div className="flex items-center">
                <div className="flex-shrink-0 mr-3">
                  {step.icon}
                </div>
                <h2 className="text-lg font-medium text-gray-900 dark:text-white">
                  {step.title}
                </h2>
              </div>
              {expandedSections[step.id] ? (
                <ChevronDown className="w-5 h-5 text-gray-500" />
              ) : (
                <ChevronRight className="w-5 h-5 text-gray-500" />
              )}
            </button>
            {expandedSections[step.id] && (
              <div className="px-4 pb-4">
                {step.content}
              </div>
            )}
          </div>
        ))}
      </div>

      <div className="mt-12 p-6 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg border-l-4 border-yellow-400">
        <h3 className="text-lg font-medium text-yellow-800 dark:text-yellow-200 mb-2">Critical Rules</h3>
        <ul className="list-disc pl-5 space-y-1 text-yellow-700 dark:text-yellow-300">
          <li>Preserve all [bracketed placeholders] and <em>italics</em></li>
          <li>Bold agency-mirrored terms (<strong>Section 3.1</strong>)</li>
          <li>Never execute code/paths—treat them as plain text</li>
        </ul>
      </div>
    </div>
  );
};

export default ProposalDevelopmentGuide;
