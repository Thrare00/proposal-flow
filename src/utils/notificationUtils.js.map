{"version":3,"file":"notificationUtils.js","sourceRoot":"","sources":["notificationUtils.ts"],"names":[],"mappings":"AAkBA,4EAA4E;AAC5E,MAAM,CAAC,KAAK,UAAU,6BAA6B;IACjD,IAAI,CAAC,CAAC,cAAc,IAAI,MAAM,CAAC;QAAE,OAAO,QAAQ,CAAC;IACjD,IAAI,YAAY,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;QAC1C,OAAO,MAAM,YAAY,CAAC,iBAAiB,EAAE,CAAC;IAChD,CAAC;IACD,OAAO,YAAY,CAAC,UAAU,CAAC;AACjC,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,KAAa,EAAE,OAA6B;IAC3E,IAAI,cAAc,IAAI,MAAM,IAAI,YAAY,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;QACtE,IAAI,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACnC,CAAC;AACH,CAAC;AAED,MAAM,UAAU,kBAAkB;IAChC,OAAO,cAAc,IAAI,MAAM,CAAC;AAClC,CAAC","sourcesContent":["import { NotificationPermission } from './types';\n\ninterface NotificationOptions {\n  body?: string;\n  icon?: string;\n  badge?: string;\n  tag?: string;\n  renotify?: boolean;\n  silent?: boolean;\n  requireInteraction?: boolean;\n  data?: any;\n  actions?: Array<{\n    action: string;\n    title: string;\n    icon?: string;\n  }>;\n}\n\n// Utility to request notification permission and show browser notifications\nexport async function requestNotificationPermission(): Promise<NotificationPermission> {\n  if (!('Notification' in window)) return 'denied';\n  if (Notification.permission === 'default') {\n    return await Notification.requestPermission();\n  }\n  return Notification.permission;\n}\n\nexport function showNotification(title: string, options?: NotificationOptions) {\n  if ('Notification' in window && Notification.permission === 'granted') {\n    new Notification(title, options);\n  }\n}\n\nexport function canUseNotification(): boolean {\n  return 'Notification' in window;\n}\n"]}