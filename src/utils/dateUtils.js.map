{"version":3,"file":"dateUtils.js","sourceRoot":"","sources":["dateUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { \n  format, \n  differenceInDays, \n  isBefore, \n  parseISO,\n  startOfWeek,\n  endOfWeek,\n  eachDayOfInterval,\n  startOfMonth,\n  endOfMonth,\n  isWithinInterval,\n  isSameDay,\n  addMonths,\n  subMonths\n} from 'date-fns';\n\nimport type { UrgencyLevel } from '../types';\n\n\nexport const formatDate = (dateString: string): string => {\n  return format(parseISO(dateString), 'MMM d, yyyy');\n};\n\nexport const formatDateWithDay = (dateString: string): string => {\n  return format(parseISO(dateString), 'EEE, MMM d, yyyy');\n};\n\nexport const isOverdue = (dateString: string): boolean => {\n  const date = parseISO(dateString);\n  const today = new Date();\n  return isBefore(date, today);\n};\n\nexport const getUrgencyLevel = (dueDate: string): UrgencyLevel => {\n  const today = new Date();\n  const dueDateObj = parseISO(dueDate);\n  const daysUntilDue = differenceInDays(dueDateObj, today);\n  \n  if (daysUntilDue < 0) return 'critical'; // Overdue\n  if (daysUntilDue <= 2) return 'critical';\n  if (daysUntilDue <= 7) return 'high';\n  if (daysUntilDue <= 14) return 'medium';\n  return 'low';\n}\n\nexport const getUrgencyColor = (urgency: UrgencyLevel): string => {\n  switch (urgency) {\n    case 'critical': return 'bg-error-100 text-error-800';\n    case 'high': return 'bg-warning-100 text-warning-800';\n    case 'medium': return 'bg-accent-100 text-accent-800';\n    case 'low': return 'bg-success-100 text-success-800';\n    default: return 'bg-gray-100 text-gray-800';\n  };\n}\n\nexport const getUrgencyBorderColor = (urgency: UrgencyLevel): string => {\n  switch (urgency) {\n    case 'critical': return 'border-error-300';\n    case 'high': return 'border-warning-300';\n    case 'medium': return 'border-accent-300';\n    case 'low': return 'border-success-300';\n    default: return 'border-gray-300';\n  }\n};\n\nexport const getDaysUntilDue = (dueDate: string): number => {\n  const today = new Date();\n  const dueDateObj = parseISO(dueDate);\n  return differenceInDays(dueDateObj, today);\n};\n\nexport const getCurrentWeekDays = () => {\n  const today = new Date();\n  const start = startOfWeek(today, { weekStartsOn: 1 }); // Monday as first day\n  const end = endOfWeek(today, { weekStartsOn: 1 });\n  \n  return eachDayOfInterval({ start, end });\n};\n\nexport const getMonthDays = (date: Date) => {\n  const start = startOfMonth(date);\n  const end = endOfMonth(date);\n  \n  return eachDayOfInterval({ start, end });\n};\n\nexport const isDateInRange = (date: Date, startDate: Date, endDate: Date) => {\n  return isWithinInterval(date, { start: startDate, end: endDate });\n};\n\nexport const isSameDate = (date1: string, date2: string) => {\n  return isSameDay(parseISO(date1), parseISO(date2));\n};\n\nexport const getNextMonth = (date: Date) => {\n  return addMonths(date, 1);\n};\n\nexport const getPreviousMonth = (date: Date) => {\n  return subMonths(date, 1);\n};\n\nexport const getDatesBetween = (startDate: string, endDate: string) => {\n  const start = parseISO(startDate);\n  const end = parseISO(endDate);\n  return eachDayOfInterval({ start, end });\n};"]}