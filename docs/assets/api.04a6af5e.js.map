{"version":3,"file":"api.04a6af5e.js","sources":["../../src/lib/api.js"],"sourcesContent":["// Prefer Cloudflare Worker proxy if configured, but support automatic fallback to Apps Script\nconst GAS_PROXY = import.meta.env.VITE_GAS_PROXY;\nconst GAS_URL = import.meta.env.VITE_GAS_URL;\nconst GAS = GAS_PROXY || GAS_URL;\nconst HEALTH = import.meta.env.VITE_HEALTH_URL || GAS_PROXY || GAS_URL;\nconst FOLDER = import.meta.env.VITE_REPORTS_FOLDER_ID;\n\n// One-time runtime logging to verify endpoints in the deployed bundle\nif (typeof window !== 'undefined' && !window.__PF_ENDPOINTS_LOGGED__) {\n  window.__PF_ENDPOINTS_LOGGED__ = true;\n  // eslint-disable-next-line no-console\n  console.log('[PF] Endpoints:', {\n    GAS_PROXY: import.meta.env.VITE_GAS_PROXY || null,\n    GAS_URL: import.meta.env.VITE_GAS_URL || null,\n    GAS_RESOLVED: GAS,\n    HEALTH_RESOLVED: HEALTH,\n    QUEUE_URL: (typeof import.meta !== 'undefined' && import.meta.env && (import.meta.env.VITE_QUEUE_URL || null)),\n  });\n}\n\nasync function j(url, opt) { \n  const r = await fetch(url, {\n    ...opt,\n    credentials: 'omit',\n    headers: {\n      'Accept': 'application/json',\n      ...(opt?.headers || {})\n    }\n  }); \n  \n  const ctype = r.headers.get('content-type') || '';\n\n  if (!r.ok) {\n    const text = await r.text().catch(() => '');\n    if (text.trim().startsWith('<!DOCTYPE') || text.trim().startsWith('<html')) {\n      throw new Error(`Upstream returned HTML (${r.status}). Snippet: ${text.slice(0, 160)}`);\n    }\n    // Sometimes upstream sends JSON error with text/plain; try to parse\n    try {\n      if (text && (ctype.includes('json') || text.trim().startsWith('{') || text.trim().startsWith('['))) {\n        const parsed = JSON.parse(text);\n        throw new Error(`${r.status} ${r.statusText} — ${JSON.stringify(parsed).slice(0, 200)}`);\n      }\n    } catch {}\n    throw new Error(`${r.status} ${r.statusText} — ${text.slice(0, 200)}`);\n  }\n  \n  // Try JSON first\n  if (ctype.includes('json')) {\n    return await r.json();\n  }\n  // Fallback: parse text that looks like JSON (guards against wrong content-type)\n  const text = await r.text();\n  const trimmed = text.trim();\n  if (trimmed.startsWith('{') || trimmed.startsWith('[')) {\n    try { return JSON.parse(trimmed); } catch {}\n  }\n  // Surface a helpful error if still not JSON\n  throw new Error(`Failed to parse JSON response. Content-Type: ${ctype || 'n/a'}. Snippet: ${trimmed.slice(0, 200)}`);\n}\n\n// Try multiple candidate URLs in order until one yields valid JSON\nasync function jTry(urls, opt) {\n  let lastErr;\n  for (const u of urls.filter(Boolean)) {\n    try {\n      return await j(u, opt);\n    } catch (e) {\n      lastErr = e;\n      // continue to next candidate\n    }\n  }\n  throw lastErr || new Error('No valid endpoints configured');\n}\n\nexport async function withRetry(fn, tries = 3, delay = 600) {\n  let last;\n  for (let i = 0; i < tries; i++) { \n    try { \n      return await fn(); \n    } catch (e) { \n      last = e; \n      if (i < tries - 1) {\n        await new Promise(r => setTimeout(r, delay * (i + 1)));\n      }\n    }\n  }\n  throw last;\n}\n\nexport async function getHealth() { \n  const urls = [\n    HEALTH && `${HEALTH}?fn=getHealth`,\n    GAS_URL && `${GAS_URL}?fn=getHealth`,\n  ];\n  return withRetry(() => jTry(urls));\n}\n\nexport async function getCadence() { \n  const urls = [\n    GAS_PROXY && `${GAS_PROXY}?fn=getCadence`,\n    GAS_URL && `${GAS_URL}?fn=getCadence`,\n  ];\n  return withRetry(() => jTry(urls));\n}\n\nexport async function setCadence(payload) {\n  const urls = [\n    GAS_PROXY && `${GAS_PROXY}?fn=setCadence`,\n    GAS_URL && `${GAS_URL}?fn=setCadence`,\n  ];\n  return withRetry(() => jTry(urls, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  }));\n}\n\nexport async function getReports() { \n  if (!FOLDER) throw new Error('Missing VITE_REPORTS_FOLDER_ID');\n  const urls = [\n    GAS_PROXY && `${GAS_PROXY}?fn=getReports&folderId=${encodeURIComponent(FOLDER)}`,\n    GAS_URL && `${GAS_URL}?fn=getReports&folderId=${encodeURIComponent(FOLDER)}`,\n  ];\n  return withRetry(() => jTry(urls));\n}\n\n// Backward compatibility\nexport async function gasGet(fn) {\n  const urls = [\n    GAS_PROXY && `${GAS_PROXY}?fn=${encodeURIComponent(fn)}`,\n    GAS_URL && `${GAS_URL}?fn=${encodeURIComponent(fn)}`,\n  ];\n  return withRetry(() => jTry(urls));\n}\n"],"names":["GAS_PROXY","GAS_URL","GAS","HEALTH","FOLDER","j","url","opt","r","ctype","text","parsed","trimmed","jTry","urls","lastErr","u","e","withRetry","fn","tries","delay","last","i","getHealth","getCadence","setCadence","payload","getReports"],"mappings":"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"}