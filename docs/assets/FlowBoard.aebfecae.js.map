{"version":3,"file":"FlowBoard.aebfecae.js","sources":["../../src/pages/FlowBoard.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useProposalContext } from '../contexts/ProposalContext.jsx';\nimport { format, parseISO } from 'date-fns';\nimport { getStatusName } from '../utils/statusUtils.js';\n\n// Status values that match the application's workflow\nconst STATUS_VALUES = ['intake', 'outline', 'drafting', 'internal_review', 'final_review', 'submitted'];\n\nfunction FlowBoard() {\n  const navigate = useNavigate();\n  const { proposals = [], fetchProposals } = useProposalContext();\n  const [search, setSearch] = useState('');\n  const [agencyFilter, setAgencyFilter] = useState('');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch proposals on component mount\n  useEffect(() => {\n    if (fetchProposals) {\n      const loadData = async () => {\n        try {\n          setIsRefreshing(true);\n          await fetchProposals();\n          setError(null);\n        } catch (err) {\n          console.error('Error fetching proposals:', err);\n          setError('Failed to load proposals. Please try again.');\n        } finally {\n          setIsRefreshing(false);\n        }\n      };\n      \n      loadData();\n    }\n  }, [fetchProposals]);\n\n  // Get unique agencies for filter dropdown\n  const agencies = useMemo(() => {\n    const agencySet = new Set(proposals.map(p => p.agency).filter(Boolean));\n    return Array.from(agencySet).sort();\n  }, [proposals]);\n\n  // Filter proposals based on search and agency filter\n  const filteredProposals = useMemo(() => {\n    let result = [...proposals];\n    \n    if (search.trim()) {\n      const searchLower = search.toLowerCase();\n      result = result.filter(p => \n        (p.title || '').toLowerCase().includes(searchLower) ||\n        (p.agency || '').toLowerCase().includes(searchLower)\n      );\n    }\n    \n    if (agencyFilter) {\n      result = result.filter(p => p.agency === agencyFilter);\n    }\n    \n    return result;\n  }, [proposals, search, agencyFilter]);\n\n  // Group proposals by status\n  const proposalsByStatus = useMemo(() => {\n    const grouped = {};\n    STATUS_VALUES.forEach(status => {\n      grouped[status] = filteredProposals.filter(p => p.status === status);\n    });\n    return grouped;\n  }, [filteredProposals]);\n\n  const handleCardClick = useCallback((id) => {\n    navigate(`/proposals/${id}`);\n  }, [navigate]);\n\n  const handleRefresh = useCallback(async () => {\n    if (!fetchProposals) return;\n    try {\n      setIsRefreshing(true);\n      await fetchProposals();\n      setError(null);\n    } catch (err) {\n      console.error('Error refreshing proposals:', err);\n      setError('Failed to refresh proposals. Please try again.');\n    } finally {\n      setIsRefreshing(false);\n    }\n  }, [fetchProposals]);\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 p-4\">\n        <div className=\"max-w-md w-full bg-white rounded-xl shadow-lg overflow-hidden\">\n          <div className=\"bg-red-50 px-6 py-4 border-b border-red-100\">\n            <h2 className=\"text-lg font-medium text-red-800\">Error Loading Proposals</h2>\n          </div>\n          <div className=\"p-6\">\n            <p className=\"text-gray-700 mb-4\">{error}</p>\n            <button\n              onClick={handleRefresh}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n              disabled={isRefreshing}\n            >\n              {isRefreshing ? 'Retrying...' : 'Retry'}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-2xl font-bold\">Proposal Flow Board</h1>\n        <button \n          onClick={handleRefresh}\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n          disabled={isRefreshing}\n        >\n          {isRefreshing ? 'Refreshing...' : 'Refresh'}\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\n        <div>\n          <label className=\"block text-sm font-medium mb-1\">Search</label>\n          <input\n            type=\"text\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            className=\"w-full p-2 border rounded\"\n            placeholder=\"Search proposals...\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium mb-1\">Filter by Agency</label>\n          <select\n            value={agencyFilter}\n            onChange={(e) => setAgencyFilter(e.target.value)}\n            className=\"w-full p-2 border rounded\"\n          >\n            <option value=\"\">All Agencies</option>\n            {agencies.map(agency => (\n              <option key={agency} value={agency}>\n                {agency}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-4\">\n        {STATUS_VALUES.map(status => (\n          <div key={status} className=\"border rounded p-4\">\n            <div className=\"font-bold mb-2\">{getStatusName(status)}</div>\n            <div className=\"space-y-2\">\n              {proposalsByStatus[status]?.map(proposal => (\n                <div \n                  key={proposal.id}\n                  onClick={() => handleCardClick(proposal.id)}\n                  className=\"p-3 border rounded cursor-pointer hover:shadow-md transition-shadow\"\n                >\n                  <div className=\"font-medium\">{proposal.title || 'Untitled'}</div>\n                  <div className=\"text-sm text-gray-600\">{proposal.agency}</div>\n                  {proposal.dueDate && (\n                    <div className=\"text-xs mt-1\">\n                      Due: {format(parseISO(proposal.dueDate), 'MMM d, yyyy')}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FlowBoard;\n"],"names":["STATUS_VALUES","FlowBoard","navigate","useNavigate","proposals","fetchProposals","useProposalContext","search","setSearch","useState","agencyFilter","setAgencyFilter","isRefreshing","setIsRefreshing","error","setError","useEffect","err","agencies","useMemo","agencySet","p","filteredProposals","result","searchLower","proposalsByStatus","grouped","status","handleCardClick","useCallback","id","handleRefresh","jsxs","jsx","e","agency","getStatusName","proposal","format","parseISO"],"mappings":"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"}