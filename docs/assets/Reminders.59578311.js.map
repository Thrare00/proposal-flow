{"version":3,"file":"Reminders.59578311.js","sources":["../../node_modules/date-fns/addDays.mjs","../../node_modules/date-fns/endOfDay.mjs","../../node_modules/date-fns/endOfWeek.mjs","../../node_modules/date-fns/isAfter.mjs","../../node_modules/date-fns/isSameWeek.mjs","../../node_modules/date-fns/isThisWeek.mjs","../../node_modules/date-fns/isTomorrow.mjs","../../node_modules/date-fns/subDays.mjs","../../src/pages/Reminders.jsx"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport function isAfter(date, dateToCompare) {\n  const _date = toDate(date);\n  const _dateToCompare = toDate(dateToCompare);\n  return _date.getTime() > _dateToCompare.getTime();\n}\n\n// Fallback for modularized imports:\nexport default isAfter;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * The {@link isSameWeek} function options.\n */\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same week (and month and year)\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport function isSameWeek(dateLeft, dateRight, options) {\n  const dateLeftStartOfWeek = startOfWeek(dateLeft, options);\n  const dateRightStartOfWeek = startOfWeek(dateRight, options);\n\n  return +dateLeftStartOfWeek === +dateRightStartOfWeek;\n}\n\n// Fallback for modularized imports:\nexport default isSameWeek;\n","import { constructNow } from \"./constructNow.mjs\";\nimport { isSameWeek } from \"./isSameWeek.mjs\";\n\n/**\n * The {@link isThisWeek} function options.\n */\n\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n * @param options - The object with options\n *\n * @returns The date is in this week\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\nexport function isThisWeek(date, options) {\n  return isSameWeek(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default isThisWeek;\n","import { addDays } from \"./addDays.mjs\";\nimport { constructNow } from \"./constructNow.mjs\";\nimport { isSameDay } from \"./isSameDay.mjs\";\n\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is tomorrow\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * const result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nexport function isTomorrow(date) {\n  return isSameDay(date, addDays(constructNow(date), 1));\n}\n\n// Fallback for modularized imports:\nexport default isTomorrow;\n","import { addDays } from \"./addDays.mjs\";\n\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be subtracted.\n *\n * @returns The new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport function subDays(date, amount) {\n  return addDays(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subDays;\n","import React, { \n  useMemo, \n  useState, \n  useCallback, \n  useEffect, \n  useRef,\n  useDeferredValue,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { \n  AlertTriangle, \n  Clock, \n  CheckCircle,\n  Calendar,\n  FileText,\n  CheckSquare,\n  Loader2,\n  RefreshCw,\n  AlertCircle,\n  Plus,\n  X,\n  Filter,\n  Search\n} from 'lucide-react';\nimport { useProposalContext } from '../contexts/ProposalContext.jsx';\nimport ErrorBoundary from '../components/ErrorBoundary.jsx';\nimport { \n  isOverdue,\n  formatDateWithDay\n} from '../utils/dateUtils.js';\nimport { \n  startOfDay,\n  endOfDay,\n  endOfWeek,\n  startOfWeek,\n  isAfter,\n  isToday,\n  isTomorrow,\n  isThisWeek,\n  addDays,\n  subDays,\n  parseISO,\n  isBefore,\n  format as formatDate,\n  isSameDay,\n  isSameWeek,\n  isSameMonth,\n  isSameYear,\n  isPast,\n  isFuture,\n  addWeeks,\n  subWeeks,\n  differenceInDays\n} from 'date-fns';\nimport { getUrgencyLevel } from '../utils/statusUtils.js';\n// Import components directly\nimport TaskCard from '../components/TaskCard.jsx';\nimport ProposalCard from '../components/ProposalCard.jsx';\n\n// Skeleton loading components\nconst TaskSkeleton = () => (\n  <div className=\"animate-pulse p-4 border rounded-lg mb-2 bg-gray-50\">\n    <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n    <div className=\"h-3 bg-gray-100 rounded w-1/2\"></div>\n  </div>\n);\n\nconst SectionSkeleton = ({ title }) => (\n  <div className=\"mb-8\">\n    <h2 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">{title}</h2>\n    <div className=\"space-y-2\">\n      <TaskSkeleton />\n      <TaskSkeleton />\n    </div>\n  </div>\n);\n\nSectionSkeleton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\n// Empty state component with memoization\nconst EmptyState = React.memo(({ icon: Icon, title, description, action, className = '' }) => (\n  <div className={`text-center py-12 ${className}`}>\n    <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-gray-100 dark:bg-gray-800 mb-3\">\n      <Icon className=\"h-6 w-6 text-gray-400\" aria-hidden=\"true\" />\n    </div>\n    <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">{title}</h3>\n    <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">{description}</p>\n    {action && <div className=\"mt-4\">{action}</div>}\n  </div>\n));\n\nEmptyState.propTypes = {\n  icon: PropTypes.elementType.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  action: PropTypes.node,\n  className: PropTypes.string\n};\n\nEmptyState.defaultProps = {\n  action: null,\n  className: ''\n};\n\nEmptyState.displayName = 'EmptyState';\n\n// Error state component with retry functionality\nconst ErrorState = memo(({ error, onRetry, className = '' }) => (\n  <div className={`p-4 bg-red-50 border border-red-200 dark:bg-red-900/10 dark:border-red-900/30 rounded-md ${className}`}>\n    <div className=\"flex items-center\">\n      <AlertCircle className=\"h-5 w-5 text-red-400 mr-2\" />\n      <h3 className=\"text-sm font-medium text-red-800 dark:text-red-200\">Error loading reminders</h3>\n    </div>\n    <div className=\"mt-2 text-sm text-red-700 dark:text-red-300\">\n      {error?.message || 'An unknown error occurred'}\n    </div>\n    {onRetry && (\n      <div className=\"mt-4\">\n        <button\n          type=\"button\"\n          onClick={onRetry}\n          className=\"text-sm font-medium text-red-700 dark:text-red-300 hover:text-red-600 dark:hover:text-red-200 focus:outline-none flex items-center\"\n        >\n          <RefreshCw className=\"h-4 w-4 mr-1\" />\n          Retry\n        </button>\n      </div>\n    )}\n  </div>\n));\n\nErrorState.propTypes = {\n  error: PropTypes.instanceOf(Error),\n  onRetry: PropTypes.func,\n  className: PropTypes.string\n};\n\nErrorState.defaultProps = {\n  error: null,\n  onRetry: null,\n  className: ''\n};\n\nErrorState.displayName = 'ErrorState';\n\n// Filter functions will be moved inside the component\n\n// Simple task item component\nconst TaskItem = memo(({ task }) => (\n  <div className=\"mb-2\">\n    <TaskCard task={task} />\n  </div>\n));\n\nTaskItem.propTypes = {\n  task: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    dueDate: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n    status: PropTypes.string,\n    priority: PropTypes.string,\n    completed: PropTypes.bool,\n    completedAt: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)])\n  }).isRequired\n};\n\nTaskItem.displayName = 'TaskItem';\n\n// Memoized proposal item component to prevent unnecessary re-renders\nconst ProposalItem = memo(({ proposal }) => (\n  <div className=\"mb-4\">\n    <ProposalCard proposal={proposal} />\n  </div>\n));\n\nProposalItem.propTypes = {\n  proposal: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    status: PropTypes.string,\n    dueDate: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n    client: PropTypes.string,\n    value: PropTypes.number,\n    currency: PropTypes.string\n  }).isRequired\n};\n\nProposalItem.displayName = 'ProposalItem';\n\n// Simple list component with virtualization for better performance\nconst SimpleList = memo(({ \n  items, \n  renderItem, \n  containerHeight = 400,\n  emptyState = null,\n  loading = false,\n  loadingComponent = null\n}) => {\n  if (loading) {\n    return loadingComponent || (\n      <div className=\"flex justify-center items-center\" style={{ height: containerHeight }}>\n        <Loader2 className=\"h-8 w-8 animate-spin text-gray-400\" />\n      </div>\n    );\n  }\n\n  if (!items || items.length === 0) {\n    return emptyState || (\n      <div className=\"flex justify-center items-center text-gray-500\" style={{ height: containerHeight }}>\n        No items to display\n      </div>\n    );\n  }\n\n  return (\n    <div \n      className=\"space-y-2 pr-2 -mr-2\" \n      style={{ \n        maxHeight: containerHeight, \n        overflowY: 'auto',\n        scrollbarWidth: 'thin',\n        scrollbarColor: '#9ca3af #f3f4f6'\n      }}\n    >\n      {items.map((item, index) => (\n        <div key={item.id || index} className=\"transition-all duration-200 hover:scale-[1.01]\">\n          {renderItem({ item, index })}\n        </div>\n      ))}\n    </div>\n  );\n});\n\nSimpleList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  renderItem: PropTypes.func.isRequired,\n  containerHeight: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  emptyState: PropTypes.node,\n  loading: PropTypes.bool,\n  loadingComponent: PropTypes.node\n};\n\nSimpleList.defaultProps = {\n  containerHeight: 400,\n  emptyState: null,\n  loading: false,\n  loadingComponent: null\n};\n\nSimpleList.displayName = 'SimpleList';\n\n// Use SimpleList as the default VirtualList\nconst VirtualList = SimpleList;\n\n// Main Reminders component with tabs for different views\nconst Reminders = () => {\n  const { proposals = [], isLoading, error } = useProposalContext();\n  const [activeTab, setActiveTab] = useState('overdue');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [localError, setLocalError] = useState(null);\n  \n  // State for filters and sorting\n  const [filters, setFilters] = useState({\n    status: 'all',\n    priority: 'all',\n    dueDate: 'anytime',\n    searchQuery: ''\n  });\n  \n  const [sortBy, setSortBy] = useState({\n    field: 'dueDate',\n    direction: 'asc' // 'asc' or 'desc'\n  });\n  \n  // Debounced search query\n  const [searchTerm, setSearchTerm] = useState('');\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState('');\n  \n  // Debounce search input\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm);\n    }, 300);\n    \n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [searchTerm]);\n  \n  // Update filters when debounced search term changes\n  useEffect(() => {\n    setFilters(prev => ({\n      ...prev,\n      searchQuery: debouncedSearchTerm\n    }));\n  }, [debouncedSearchTerm]);\n\n  // Filter functions with memoization\n  const filterOverdueTasks = useCallback((tasks) => {\n    return tasks.filter(task => task.urgency === 'overdue');\n  }, []);\n\n  const filterTasksThisWeek = useCallback((tasks) => {\n    return tasks.filter(task => \n      task.timeStatus === 'today' || \n      task.timeStatus === 'tomorrow' || \n      task.timeStatus === 'this_week'\n    );\n  }, []);\n\n  const filterUpcomingTasks = useCallback((tasks) => {\n    return tasks.filter(task => task.timeStatus === 'upcoming');\n  }, []);\n  \n  // Task processing function\n  const processTasks = useCallback((proposals) => {\n    if (!proposals || !Array.isArray(proposals)) return [];\n    \n    const now = new Date();\n    const weekEnd = endOfWeek(now);\n    \n    return proposals.flatMap(proposal => {\n      if (!proposal || !proposal.tasks) return [];\n      \n      return proposal.tasks\n        .filter(task => task && !task.completed)\n        .map(task => {\n          const dueDate = task.dueDate || task.due_date;\n          const due = dueDate ? new Date(dueDate) : null;\n          let timeStatus = '';\n          \n          if (due) {\n            if (isToday(due)) {\n              timeStatus = 'today';\n            } else if (isTomorrow(due)) {\n              timeStatus = 'tomorrow';\n            } else if (isThisWeek(due)) {\n              timeStatus = 'this_week';\n            } else if (isAfter(due, weekEnd)) {\n              timeStatus = 'upcoming';\n            }\n          }\n          \n          return {\n            ...task,\n            proposalId: proposal.id,\n            proposalTitle: proposal.title,\n            dueDate: due,\n            timeStatus,\n            status: task.status || 'pending',\n            priority: task.priority || 'medium',\n            urgency: getUrgencyLevel(task.dueDate || dueDate)\n          };\n        });\n    });\n  }, []);\n  \n  // Process tasks with error handling and memoization\n  const allTasks = useMemo(() => {\n    try {\n      return processTasks(proposals);\n    } catch (err) {\n      console.error('Error processing tasks:', err);\n      setLocalError('Failed to process tasks. Please try refreshing the page.');\n      return [];\n    }\n  }, [proposals]);\n  \n  // Memoize tab change handler\n  const handleTabChange = useCallback((tab) => {\n    setActiveTab(tab);\n  }, []);\n  \n  // Memoize all filtered data in a single useMemo hook\n  const {\n    overdueTasks,\n    tasksThisWeek,\n    upcomingTasks,\n    overdueProposals,\n    completedTasks,\n    proposalsDueSoon\n  } = useMemo(() => {\n    if (!proposals || !allTasks) {\n      return {\n        overdueTasks: [],\n        tasksThisWeek: [],\n        upcomingTasks: [],\n        overdueProposals: [],\n        completedTasks: [],\n        proposalsDueSoon: []\n      };\n    }\n\n    try {\n      // Process proposals for overdue status\n      const overdueProposals = proposals\n        .filter(p => p.status !== 'submitted' && isOverdue(p.dueDate))\n        .sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\n\n      // Filter completed tasks (last 30 days)\n      const thirtyDaysAgo = subDays(new Date(), 30);\n      const completedTasks = allTasks.filter(task => {\n        try {\n          if (!task.completed || !task.completedAt) return false;\n          const completedDate = parseISO(task.completedAt);\n          return isAfter(completedDate, thirtyDaysAgo);\n        } catch (err) {\n          console.warn('Error processing completed task:', task, err);\n          return false;\n        }\n      });\n\n      // Filter proposals due soon (next 7 days)\n      const today = new Date();\n      const nextWeek = addDays(today, 7);\n      const proposalsDueSoon = proposals.filter(proposal => {\n        try {\n          if (!proposal || !proposal.dueDate) return false;\n          const proposalDate = parseISO(proposal.dueDate);\n          const urgency = getUrgencyLevel(proposal.dueDate);\n          return (\n            proposal.status !== 'submitted' &&\n            (urgency === 'high' || urgency === 'critical') &&\n            isAfter(proposalDate, today) && \n            isBefore(proposalDate, endOfDay(nextWeek))\n          );\n        } catch (err) {\n          console.warn('Error processing proposal date:', proposal, err);\n          return false;\n        }\n      }).sort((a, b) => {\n        try {\n          return parseISO(a.dueDate) - parseISO(b.dueDate);\n        } catch (err) {\n          return 0;\n        }\n      });\n\n      return {\n        overdueTasks: filterOverdueTasks(allTasks),\n        tasksThisWeek: filterTasksThisWeek(allTasks),\n        upcomingTasks: filterUpcomingTasks(allTasks),\n        overdueProposals,\n        completedTasks,\n        proposalsDueSoon\n      };\n    } catch (err) {\n      console.error('Error processing data:', err);\n      setLocalError('Failed to process data.');\n      return { \n        overdueTasks: [], \n        tasksThisWeek: [], \n        upcomingTasks: [],\n        overdueProposals: [],\n        completedTasks: [],\n        proposalsDueSoon: []\n      };\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [allTasks, proposals]);\n  \n  // Show loading state\n  if (isLoading || isProcessing) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <LoadingSpinner text=\"Loading reminders...\" />\n      </div>\n    );\n  }\n  \n  // Memoize the render functions for VirtualList\n  const renderTaskItem = useCallback((task) => (\n    <div key={task.id} className=\"mb-2\">\n      <TaskCard task={task} />\n    </div>\n  ), []);\n  \n  const renderProposalItem = useCallback((proposal) => (\n    <div key={proposal.id} className=\"mb-4\">\n      <ProposalCard proposal={proposal} />\n    </div>\n  ), []);\n\n  // Tab content mapping\n  const tabContent = {\n    overdue: (\n      <div className=\"space-y-4\">\n        {overdueTasks.length > 0 && (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-3 text-red-600 flex items-center\">\n              <AlertTriangle className=\"mr-2\" /> Overdue Tasks\n            </h3>\n            <VirtualList \n              items={overdueTasks}\n              renderItem={renderTaskItem}\n              itemHeight={120}\n              containerHeight={Math.min(overdueTasks.length * 120, 400)}\n            />\n          </div>\n        )}\n        {overdueProposals.length > 0 && (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-3 text-red-600 flex items-center\">\n              <FileText className=\"mr-2\" /> Overdue Proposals\n            </h3>\n            <VirtualList \n              items={overdueProposals}\n              renderItem={renderProposalItem}\n              itemHeight={180}\n              containerHeight={Math.min(overdueProposals.length * 180, 400)}\n            />\n          </div>\n        )}\n        {overdueTasks.length === 0 && overdueProposals.length === 0 && (\n          <EmptyState \n            icon={CheckCircle}\n            title=\"No overdue items\"\n            description=\"You're all caught up! No overdue tasks or proposals.\"\n          />\n        )}\n      </div>\n    ),\n    thisWeek: (\n      <div className=\"space-y-4\">\n        {tasksThisWeek.length > 0 ? (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-3 text-amber-600\">\n              Due This Week\n            </h3>\n            <VirtualList \n              items={tasksThisWeek}\n              renderItem={renderTaskItem}\n              itemHeight={120}\n              containerHeight={Math.min(tasksThisWeek.length * 120, 400)}\n            />\n          </div>\n        ) : (\n          <EmptyState \n            icon={CheckCircle}\n            title=\"No tasks due this week\"\n            description=\"You're all caught up for this week!\"\n          />\n        )}\n      </div>\n    ),\n    upcoming: (\n      <div className=\"space-y-4\">\n        {upcomingTasks.length > 0 ? (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-3 text-blue-600\">\n              Upcoming Tasks\n            </h3>\n            <VirtualList \n              items={upcomingTasks}\n              renderItem={renderTaskItem}\n              itemHeight={120}\n              containerHeight={Math.min(upcomingTasks.length * 120, 400)}\n            />\n          </div>\n        ) : (\n          <EmptyState \n            icon={CheckCircle}\n            title=\"No upcoming tasks\"\n            description=\"You don't have any tasks scheduled for the near future.\"\n          />\n        )}\n      </div>\n    ),\n    proposals: (\n      <div className=\"space-y-4\">\n        {proposalsDueSoon.length > 0 ? (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-3 text-amber-600\">\n              Proposals Due Soon\n            </h3>\n            <VirtualList \n              items={proposalsDueSoon}\n              renderItem={renderProposalItem}\n              itemHeight={180}\n              containerHeight={Math.min(proposalsDueSoon.length * 180, 400)}\n            />\n          </div>\n        ) : (\n          <EmptyState \n            icon={CheckCircle}\n            title=\"No upcoming proposals\"\n            description=\"You don't have any proposals due soon.\"\n          />\n        )}\n      </div>\n    ),\n    completed: (\n      <div className=\"space-y-4\">\n        {completedTasks.length > 0 ? (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-3 text-green-600\">\n              Recently Completed\n            </h3>\n            <VirtualList \n              items={completedTasks}\n              renderItem={renderTaskItem}\n              itemHeight={120}\n              containerHeight={Math.min(completedTasks.length * 120, 400)}\n            />\n          </div>\n        ) : (\n          <EmptyState \n            icon={CheckCircle}\n            title=\"No completed tasks\"\n            description=\"You haven't completed any tasks recently.\"\n          />\n        )}\n      </div>\n    )\n  };\n  \n  // Tab configuration with enhanced accessibility and visual feedback\n  const tabs = useMemo(() => [\n    { \n      id: 'overdue', \n      label: 'Overdue', \n      icon: AlertTriangle, \n      count: overdueTasks.length, \n      badgeClass: 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200',\n      description: 'Tasks and proposals that are past their due date',\n      emptyState: {\n        title: 'No overdue items',\n        description: 'Great job! You\\'re all caught up with your tasks and proposals.',\n        icon: CheckCircle\n      }\n    },\n    { \n      id: 'today', \n      label: 'Today', \n      icon: Clock, \n      count: todayTasks.length, \n      badgeClass: 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200',\n      description: 'Tasks and proposals due today',\n      emptyState: {\n        title: 'Nothing due today',\n        description: 'No tasks or proposals are due today. Enjoy your day!',\n        icon: CheckCircle\n      }\n    },\n    { \n      id: 'upcoming', \n      label: 'Upcoming', \n      icon: Calendar, \n      count: upcomingTasks.length, \n      badgeClass: 'bg-yellow-100 dark:bg-yellow-900/20 text-yellow-800 dark:text-yellow-200',\n      description: 'Tasks and proposals due in the next 7 days',\n      emptyState: {\n        title: 'No upcoming items',\n        description: 'You have no tasks or proposals due in the next 7 days.',\n        icon: Calendar\n      }\n    },\n    { \n      id: 'proposals', \n      label: 'Proposals Due', \n      icon: FileText, \n      count: dueProposals.length, \n      badgeClass: 'bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300',\n      description: 'Proposals with approaching deadlines',\n      emptyState: {\n        title: 'No proposals due soon',\n        description: 'You have no proposals with approaching deadlines.',\n        icon: FileText\n      }\n    },\n    { \n      id: 'completed', \n      label: 'Completed', \n      icon: CheckCircle,\n      count: completedTasks.length, \n      badgeClass: 'bg-green-100 dark:bg-green-900/20 text-green-800 dark:text-green-200',\n      description: 'Recently completed tasks and proposals',\n      emptyState: {\n        title: 'No completed items',\n        description: 'Completed tasks and proposals will appear here.',\n        icon: CheckCircle\n      }\n    }\n  ], [\n    overdueTasks.length,\n    todayTasks.length,\n    upcomingTasks.length,\n    dueProposals.length,\n    completedTasks.length\n  ]);\n\n  // Render tab navigation with enhanced accessibility and tooltips\n  const renderTabNavigation = () => {\n    const tabs = [\n      { \n        id: 'overdue', \n        label: 'Overdue', \n        icon: AlertTriangle, \n        count: overdueTasks.length, \n        badgeClass: 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200',\n        description: 'Tasks and proposals that are past their due date'\n      },\n      { \n        id: 'thisWeek', \n        label: 'This Week', \n        icon: Calendar, \n        count: tasksThisWeek.length, \n        badgeClass: 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200',\n        description: 'Tasks and proposals due this week'\n      },\n      { \n        id: 'upcoming', \n        label: 'Upcoming', \n        icon: Clock, \n        count: upcomingTasks.length, \n        badgeClass: 'bg-yellow-100 dark:bg-yellow-900/20 text-yellow-800 dark:text-yellow-200',\n        description: 'Tasks and proposals due in the future'\n      },\n      { \n        id: 'proposals', \n        label: 'Proposals', \n        icon: FileText, \n        count: proposalsDueSoon.length, \n        badgeClass: 'bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-200',\n        description: 'Proposals with approaching deadlines'\n      },\n      { \n        id: 'completed', \n        label: 'Completed', \n        icon: CheckCircle, \n        count: completedTasks.length, \n        badgeClass: 'bg-green-100 dark:bg-green-900/20 text-green-800 dark:text-green-200',\n        description: 'Recently completed tasks and proposals'\n      }\n    ];\n\n    return (\n      <div className=\"mb-6\">\n        <div className=\"sm:hidden\">\n          <label htmlFor=\"tabs\" className=\"sr-only\">Select a tab</label>\n          <select\n            id=\"tabs\"\n            name=\"tabs\"\n            className=\"block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-800 dark:text-white py-2 pl-3 pr-10 text-base focus:border-blue-500 focus:outline-none focus:ring-blue-500 sm:text-sm\"\n            value={activeTab}\n            onChange={(e) => setActiveTab(e.target.value)}\n          >\n            {tabs.map((tab) => (\n              <option key={tab.id} value={tab.id}>\n                {tab.label} {tab.count > 0 ? `(${tab.count})` : ''}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"hidden sm:block\">\n          <div className=\"border-b border-gray-200 dark:border-gray-700\">\n            <nav className=\"-mb-px flex space-x-8 overflow-x-auto pb-px\" aria-label=\"Tabs\">\n              {tabs.map((tab) => {\n                const isActive = activeTab === tab.id;\n                const Icon = tab.icon;\n                \n                return (\n                  <button\n                    key={tab.id}\n                    type=\"button\"\n                    onClick={() => setActiveTab(tab.id)}\n                    className={`\n                      group inline-flex items-center border-b-2 py-4 px-1 text-sm font-medium\n                      ${isActive \n                        ? 'border-blue-500 text-blue-600 dark:text-blue-400 dark:border-blue-400' \n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-200 dark:hover:border-gray-600'\n                      }\n                      whitespace-nowrap focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-gray-900\n                      transition-colors duration-150 ease-in-out relative\n                    `}\n                    aria-current={isActive ? 'page' : undefined}\n                    title={tab.description}\n                  >\n                    <Icon \n                      className={`mr-2 h-5 w-5 ${isActive ? 'opacity-100' : 'opacity-70 group-hover:opacity-100'}`} \n                      aria-hidden=\"true\" \n                    />\n                    <span className=\"truncate\">{tab.label}</span>\n                    {tab.count > 0 && (\n                      <span \n                        className={`ml-2 py-0.5 px-2 rounded-full text-xs font-medium ${tab.badgeClass} min-w-[1.5rem] inline-flex items-center justify-center`}\n                        aria-label={`${tab.count} items`}\n                      >\n                        {tab.count}\n                      </span>\n                    )}\n                    <span className=\"sr-only\">{tab.description}</span>\n                  </button>\n                );\n              })}\n            </nav>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Apply filters to items\n  const applyFilters = useCallback((items, type = 'task') => {\n    return items.filter(item => {\n      // Status filter\n      if (filters.status !== 'all') {\n        if (filters.status === 'completed' && !item.completed) return false;\n        if (filters.status === 'active' && item.completed) return false;\n        if (filters.status === 'pending' && item.status !== 'pending') return false;\n      }\n      \n      // Priority filter\n      if (filters.priority !== 'all' && item.priority !== filters.priority) {\n        return false;\n      }\n      \n      // Search query - search across multiple fields with improved matching\n      if (filters.searchQuery) {\n        const searchLower = filters.searchQuery.trim().toLowerCase();\n        if (!searchLower) return true;\n        \n        // Search in various fields\n        const searchableFields = [\n          item.title,\n          item.description,\n          item.id,\n          item.assignee?.name,\n          item.owner?.name,\n          item.tags?.join(' '),\n          item.clientName,\n          item.projectName\n        ];\n        \n        // Check if any field contains the search term\n        const matches = searchableFields.some(field => \n          field && String(field).toLowerCase().includes(searchLower)\n        );\n        \n        // Special handling for priority and status\n        const priorityMatch = item.priority && \n          item.priority.toLowerCase().includes(searchLower);\n          \n        const statusMatch = item.status && \n          item.status.toLowerCase().includes(searchLower);\n        \n        // Check for date matches (if search term looks like a date)\n        let dateMatch = false;\n        try {\n          const searchDate = new Date(searchLower);\n          if (!isNaN(searchDate)) {\n            const itemDate = item.dueDate ? new Date(item.dueDate) : null;\n            if (itemDate) {\n              dateMatch = itemDate.toDateString() === searchDate.toDateString();\n            }\n          }\n        } catch (e) {\n          // Ignore date parsing errors\n        }\n        \n        if (!matches && !priorityMatch && !statusMatch && !dateMatch) {\n          return false;\n        }\n      }\n      \n      return true;\n    });\n  }, [filters]);\n  \n  // Sort items based on sortBy state\n  const sortItems = useCallback((items) => {\n    return [...items].sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy.field) {\n        case 'dueDate':\n          const dateA = a.dueDate ? new Date(a.dueDate) : new Date(0);\n          const dateB = b.dueDate ? new Date(b.dueDate) : new Date(0);\n          comparison = dateA - dateB;\n          break;\n          \n        case 'priority':\n          const priorityOrder = { high: 3, medium: 2, low: 1 };\n          comparison = (priorityOrder[a.priority] || 0) - (priorityOrder[b.priority] || 0);\n          break;\n          \n        case 'title':\n          comparison = (a.title || '').localeCompare(b.title || '');\n          break;\n          \n        default:\n          comparison = 0;\n      }\n      \n      return sortBy.direction === 'desc' ? -comparison : comparison;\n    });\n  }, [sortBy]);\n  \n  // Process items for each tab with filters and sorting\n  const processTabItems = useCallback((items) => {\n    const filtered = applyFilters(items);\n    return sortItems(filtered);\n  }, [applyFilters, sortItems]);\n\n  // Get tab configuration with filtered and sorted items\n  const getTabConfig = () => ({\n    overdue: { \n      items: processTabItems([...overdueTasks, ...overdueProposals]),\n      emptyState: {\n        icon: CheckCircle,\n        title: 'No overdue items',\n        description: 'You\\'re all caught up! No overdue tasks or proposals.'\n      }\n    },\n    thisWeek: {\n      items: processTabItems(tasksThisWeek),\n      emptyState: {\n        icon: Calendar,\n        title: 'No tasks this week',\n        description: 'You don\\'t have any tasks due this week.'\n      }\n    },\n    upcoming: {\n      items: processTabItems(upcomingTasks),\n      emptyState: {\n        icon: Clock,\n        title: 'No upcoming tasks',\n        description: 'You don\\'t have any upcoming tasks scheduled.'\n      }\n    },\n    proposals: {\n      items: processTabItems(proposalsDueSoon),\n      emptyState: {\n        icon: FileText,\n        title: 'No proposals due soon',\n        description: 'You don\\'t have any proposals with upcoming deadlines.'\n      },\n      isGrid: true\n    },\n    completed: {\n      items: processTabItems(completedTasks),\n      emptyState: {\n        icon: CheckSquare,\n        title: 'No completed items',\n        description: 'Your completed tasks will appear here.'\n      },\n      showCompleted: true\n    }\n  });\n\n  // Render content based on active tab\n  const renderTabContent = () => {\n    if (isLoading) {\n      return (\n        <div className=\"space-y-4\">\n          <TaskSkeleton />\n          <TaskSkeleton />\n          <TaskSkeleton />\n        </div>\n      );\n    }\n\n    const tabConfig = getTabConfig();\n    const config = tabConfig[activeTab] || {};\n    const { items = [], emptyState, isGrid = false } = config;\n\n    // Special handling for overdue tab which combines tasks and proposals\n    if (activeTab === 'overdue') {\n      return (\n        <div className=\"space-y-6\">\n          {overdueTasks.length > 0 && (\n            <div>\n              <h2 className=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">Overdue Tasks</h2>\n              <div className=\"space-y-2\">\n                {overdueTasks.map(task => (\n                  <TaskCard key={task.id} task={task} />\n                ))}\n              </div>\n            </div>\n          )}\n          {overdueProposals.length > 0 && (\n            <div>\n              <h2 className=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">Overdue Proposals</h2>\n              <div className=\"grid gap-4 sm:grid-cols-1 lg:grid-cols-2\">\n                {overdueProposals.map(proposal => (\n                  <ProposalCard key={proposal.id} proposal={proposal} />\n                ))}\n              </div>\n            </div>\n          )}\n          {items.length === 0 && (\n            <EmptyState \n              icon={emptyState.icon}\n              title={emptyState.title}\n              description={emptyState.description}\n            />\n          )}\n        </div>\n      );\n    }\n\n    // Handle empty state\n    if (items.length === 0) {\n      return (\n        <EmptyState \n          icon={emptyState.icon}\n          title={emptyState.title}\n          description={emptyState.description}\n        />\n      );\n    }\n\n    // Render items in grid or list layout\n    if (isGrid) {\n      return (\n        <div className=\"grid gap-4 sm:grid-cols-1 lg:grid-cols-2\">\n          {items.map(item => (\n            activeTab === 'proposals' ? (\n              <ProposalCard key={item.id} proposal={item} />\n            ) : (\n              <TaskCard key={item.id} task={item} />\n            )\n          ))}\n        </div>\n      );\n    }\n\n    // Default list layout\n    const showCompleted = activeTab === 'completed';\n    return (\n      <div className=\"space-y-2\">\n        {items.map(item => (\n          <TaskCard \n            key={item.id} \n            task={item} \n            showCompleted={showCompleted}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  // Show error state if there's an error\n  if (error || localError) {\n    return (\n      <div className=\"p-4\">\n        <ErrorState \n          error={error || localError} \n          onRetry={() => window.location.reload()}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-6 max-w-6xl\">\n      <div className=\"mb-8\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-6\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Reminders</h1>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n              Track your upcoming tasks and deadlines\n            </p>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => window.location.reload()}\n              disabled={isLoading || isProcessing}\n              className={`inline-flex items-center px-3 py-2 border rounded-md shadow-sm text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 ${\n                isLoading || isProcessing\n                  ? 'bg-gray-100 text-gray-400 border-gray-200 cursor-not-allowed'\n                  : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700 focus:ring-blue-500'\n              }`}\n            >\n              <RefreshCw className={`h-4 w-4 mr-2 ${(isLoading || isProcessing) ? 'animate-spin' : ''}`} />\n              Refresh\n            </button>\n          </div>\n        </div>\n        \n        {/* Tabs */}\n        {renderTabNavigation()}\n        \n        {/* Filter and Sort Controls */}\n        <div className=\"mb-6 bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n            <div className=\"flex-1\">\n              <label htmlFor=\"search\" className=\"sr-only\">Search</label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Search className=\"h-4 w-4 text-gray-400\" />\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"search\"\n                  id=\"search\"\n                  className=\"block w-full pl-10 pr-10 py-2 border border-gray-300 dark:border-gray-600 rounded-md leading-5 bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                  placeholder=\"Search tasks and proposals...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  aria-label=\"Search tasks and proposals\"\n                />\n                {searchTerm ? (\n                  <button\n                    type=\"button\"\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => {\n                      setSearchTerm('');\n                      setDebouncedSearchTerm('');\n                    }}\n                    aria-label=\"Clear search\"\n                  >\n                    <X className=\"h-4 w-4 text-gray-400 hover:text-gray-500\" />\n                  </button>\n                ) : null}\n              </div>\n            </div>\n            \n            <div className=\"flex flex-wrap gap-2\">\n              <div>\n                <label htmlFor=\"status-filter\" className=\"sr-only\">Status</label>\n                <select\n                  id=\"status-filter\"\n                  className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\n                  value={filters.status}\n                  onChange={(e) => setFilters({...filters, status: e.target.value})}\n                >\n                  <option value=\"all\">All Statuses</option>\n                  <option value=\"active\">Active</option>\n                  <option value=\"completed\">Completed</option>\n                  <option value=\"pending\">Pending</option>\n                </select>\n              </div>\n              \n              <div>\n                <label htmlFor=\"priority-filter\" className=\"sr-only\">Priority</label>\n                <select\n                  id=\"priority-filter\"\n                  className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\n                  value={filters.priority}\n                  onChange={(e) => setFilters({...filters, priority: e.target.value})}\n                >\n                  <option value=\"all\">All Priorities</option>\n                  <option value=\"high\">High</option>\n                  <option value=\"medium\">Medium</option>\n                  <option value=\"low\">Low</option>\n                </select>\n              </div>\n              \n              <div>\n                <label htmlFor=\"sort-by\" className=\"sr-only\">Sort by</label>\n                <select\n                  id=\"sort-by\"\n                  className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\n                  value={`${sortBy.field}-${sortBy.direction}`}\n                  onChange={(e) => {\n                    const [field, direction] = e.target.value.split('-')\n                    setSortBy({ field, direction })\n                  }}\n                >\n                  <option value=\"dueDate-asc\">Due Date: Earliest First</option>\n                  <option value=\"dueDate-desc\">Due Date: Latest First</option>\n                  <option value=\"priority-desc\">Priority: High to Low</option>\n                  <option value=\"priority-asc\">Priority: Low to High</option>\n                  <option value=\"title-asc\">Title: A to Z</option>\n                  <option value=\"title-desc\">Title: Z to A</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Tab Content */}\n        <ErrorBoundary>\n          {renderTabContent()}\n        </ErrorBoundary>\n      </div>\n    </div>\n  );\n};\n\n// Add PropTypes for the Reminders component\nReminders.propTypes = {\n  // Context props\n  proposals: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    status: PropTypes.string,\n    dueDate: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n    client: PropTypes.string,\n    value: PropTypes.number,\n    currency: PropTypes.string\n  })),\n  isLoading: PropTypes.bool,\n  error: PropTypes.instanceOf(Error),\n  \n  // Local state props (for testing)\n  initialActiveTab: PropTypes.string,\n  initialIsProcessing: PropTypes.bool\n};\n\nReminders.defaultProps = {\n  proposals: [],\n  isLoading: false,\n  error: null,\n  initialActiveTab: 'overdue',\n  initialIsProcessing: false\n};\n\n// Memoize the main component to prevent unnecessary re-renders\nconst MemoizedReminders = memo(Reminders);\nMemoizedReminders.displayName = 'MemoizedReminders';\n\nexport default MemoizedReminders;"],"names":["addDays","date","amount","_date","toDate","constructFrom","endOfDay","endOfWeek","options","defaultOptions","getDefaultOptions","weekStartsOn","_b","_a","_d","_c","day","diff","isAfter","dateToCompare","_dateToCompare","isSameWeek","dateLeft","dateRight","dateLeftStartOfWeek","startOfWeek","dateRightStartOfWeek","isThisWeek","constructNow","isTomorrow","isSameDay","subDays","TaskSkeleton","jsxs","jsx","PropTypes","EmptyState","React","Icon","title","description","action","className","ErrorState","memo","error","onRetry","AlertCircle","RefreshCw","TaskItem","task","TaskCard","ProposalItem","proposal","ProposalCard","SimpleList","items","renderItem","containerHeight","emptyState","loading","loadingComponent","Loader2","item","index","VirtualList","Reminders","proposals","isLoading","useProposalContext","activeTab","setActiveTab","useState","isProcessing","setIsProcessing","localError","setLocalError","filters","setFilters","sortBy","setSortBy","searchTerm","setSearchTerm","debouncedSearchTerm","setDebouncedSearchTerm","useEffect","timerId","prev","filterOverdueTasks","useCallback","tasks","filterTasksThisWeek","filterUpcomingTasks","processTasks","weekEnd","dueDate","due","timeStatus","isToday","getUrgencyLevel","allTasks","useMemo","err","tab","overdueTasks","tasksThisWeek","upcomingTasks","overdueProposals","completedTasks","proposalsDueSoon","p","isOverdue","a","b","thirtyDaysAgo","completedDate","parseISO","today","nextWeek","proposalDate","urgency","isBefore","renderTaskItem","renderProposalItem","AlertTriangle","FileText","CheckCircle","Clock","Calendar","renderTabNavigation","tabs","e","isActive","applyFilters","type","searchLower","matches","field","priorityMatch","statusMatch","dateMatch","searchDate","itemDate","sortItems","comparison","dateA","dateB","priorityOrder","processTabItems","filtered","getTabConfig","CheckSquare","renderTabContent","config","isGrid","showCompleted","Search","X","direction","ErrorBoundary","MemoizedReminders"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}