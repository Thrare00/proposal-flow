{"version":3,"file":"Guide.f3a1af38.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/ChevronDownIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ChevronUpIcon.js","../../src/pages/Guide.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction ChevronDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m19.5 8.25-7.5 7.5-7.5-7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChevronUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 15.75 7.5-7.5 7.5 7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronUpIcon);\nexport default ForwardRef;","import { useState, useEffect, useCallback, useRef } from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\n\n// Persist state to localStorage\nconst usePersistedState = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    try {\n      const saved = localStorage.getItem(key);\n      return saved ? JSON.parse(saved) : defaultValue;\n    } catch (e) {\n      return defaultValue;\n    }\n  });\n\n  useEffect(() => {\n    try {\n      localStorage.setItem(key, JSON.stringify(state));\n    } catch (e) {\n      console.error('Failed to save state', e);\n    }\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nconst Guide = () => {\n  const [expandedState, setExpandedState] = usePersistedState('guideExpandedState', {});\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const contentRefs = useRef({});\n\n  // Set loading to false after initial render\n  useEffect(() => {\n    const timer = setTimeout(() => setIsLoading(false), 300);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const toggleSection = useCallback((path, isExpanding) => {\n    setExpandedState((prev) => {\n      const newState = { ...prev };\n      let current = newState;\n      \n      // Navigate to the parent level\n      for (let i = 0; i < path.length - 1; i++) {\n        if (!current[path[i]]) {\n          current[path[i]] = {};\n        }\n        current = current[path[i]];\n      }\n      \n      // Toggle or set the target section\n      const lastKey = path[path.length - 1];\n      current[lastKey] = isExpanding !== undefined ? isExpanding : !current[lastKey];\n      \n      return newState;\n    });\n  }, [setExpandedState]);\n\n  const toggleAllSections = useCallback(() => {\n    const newState = !isAllExpanded;\n    setIsAllExpanded(newState);\n    \n    // This will be implemented after phases is defined\n    console.log('Toggle all sections:', newState);\n  }, [isAllExpanded]);\n\n  const isSectionExpanded = useCallback((path) => {\n    let current = expandedState;\n    \n    for (const key of path) {\n      if (current === undefined || current === null || typeof current !== 'object') {\n        return path.length === 0; // Only expand root by default\n      }\n      current = current[key];\n    }\n    \n    // If we have a boolean value, return it\n    if (typeof current === 'boolean') {\n      return current;\n    }\n    \n    // For non-root sections, default to collapsed\n    return false;\n  }, [expandedState]);\n\n  const isSectionHeader = (text) => {\n    return text.trim().startsWith('## ');\n  };\n\n  const isSubsectionHeader = (text) => {\n    return text.trim().startsWith('### ');\n  };\n\n  const parseMarkdown = (text) => {\n    if (!text) return '';\n    \n    // Handle code blocks\n    let result = text.replace(/```([\\s\\S]*?)```/g, (match, code) => {\n      return `<pre class=\"bg-gray-100 dark:bg-gray-700 p-3 rounded-md overflow-x-auto\"><code class=\"font-mono text-sm\">${code}</code></pre>`;\n    });\n    \n    // Handle inline code\n    result = result.replace(/`([^`]+)`/g, '<code class=\"bg-gray-100 dark:bg-gray-700 px-1.5 py-0.5 rounded text-sm font-mono\">$1</code>');\n    \n    // Handle bold and italic\n    result = result\n      .replace(/\\*\\*([^*]+)\\*\\*/g, '<strong>$1</strong>')\n      .replace(/\\*([^*]+)\\*/g, '<em>$1</em>');\n    \n    // Handle line breaks\n    result = result.replace(/\\n/g, '<br />');\n    \n    return result;\n  };\n\n  const renderContent = (content, path = [], level = 0) => {\n    if (Array.isArray(content)) {\n      return (\n        <div className=\"space-y-2\">\n          {content.map((item, index) => {\n            const itemPath = [...path, `item-${index}`];\n            const itemKey = itemPath.join('_');\n            \n            return (\n              <div \n                key={index} \n                className={`${level > 0 ? 'ml-4' : ''} transition-colors duration-200`}\n                ref={el => {\n                  if (el && typeof item === 'string' && (isSectionHeader(item) || isSubsectionHeader(item))) {\n                    contentRefs.current[itemKey] = el;\n                  }\n                }}\n              >\n                {renderContent(item, itemPath, level + 1)}\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n\n    // Check if this is a section header\n    if (isSectionHeader(content) || isSubsectionHeader(content)) {\n      const headerText = content.replace(/^#+\\s*/, '').trim();\n      const headerLevel = isSubsectionHeader(content) ? 3 : 2;\n      const isExpanded = isSectionExpanded([...path]);\n      const hasNestedContent = Array.isArray(content) && content.length > 0;\n      \n      return (\n        <div \n          className={`${level > 0 ? 'border-l-2 border-gray-200 dark:border-gray-700 pl-4' : ''} mb-2`}\n        >\n          <div \n            className={`flex items-center cursor-pointer p-1 rounded-md transition-colors ${\n              isExpanded ? 'text-blue-600 dark:text-blue-400' : 'text-gray-800 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800'\n            }`}\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => toggleSection(path)}\n            onKeyDown={(e) => handleKeyDown(e, path)}\n            aria-expanded={isExpanded}\n            aria-controls={`content-${path.join('-')}`}\n          >\n            <span className={`flex-1 ${headerLevel === 2 ? 'font-semibold text-lg' : 'font-medium'}`}>\n              {headerText}\n            </span>\n            {hasNestedContent && (\n              <span className=\"text-gray-500\">\n                {isExpanded ? (\n                  <ChevronUpIcon className=\"h-4 w-4\" />\n                ) : (\n                  <ChevronDownIcon className=\"h-4 w-4\" />\n                )}\n              </span>\n            )}\n          </div>\n          \n          {hasNestedContent && (\n            <div \n              id={`content-${path.join('-')}`}\n              className={`overflow-hidden transition-all duration-300 ease-in-out ${\n                isExpanded ? 'max-h-[10000px] opacity-100' : 'max-h-0 opacity-0'\n              }`}\n              aria-hidden={!isExpanded}\n            >\n              <div className=\"py-1\">\n                {typeof content === 'string' ? (\n                  <div \n                    className=\"prose dark:prose-invert max-w-none\"\n                    dangerouslySetInnerHTML={{ __html: parseMarkdown(content) }}\n                  />\n                ) : (\n                  renderContent(content, path, level + 1)\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    // Regular content\n    return (\n      <div \n        className=\"prose dark:prose-invert max-w-none mb-3\"\n        dangerouslySetInnerHTML={{ __html: parseMarkdown(content) }}\n      />\n    );\n  };\n\n  const handleKeyDown = (e, path) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation();\n      toggleSection(path);\n    } else if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n      e.preventDefault();\n      e.stopPropagation();\n      \n      const allSections = Object.entries(contentRefs.current)\n        .filter((entry) => entry[1] !== null)\n        .sort(([a], [b]) => {\n          const aDepth = a.split('_').length;\n          const bDepth = b.split('_').length;\n          if (aDepth !== bDepth) return aDepth - bDepth;\n          return a.localeCompare(b);\n        });\n      \n      const currentIndex = allSections.findIndex(([key]) => key === path.join('_'));\n      \n      if (currentIndex !== -1) {\n        const nextIndex = e.key === 'ArrowDown' ? currentIndex + 1 : currentIndex - 1;\n        if (nextIndex >= 0 && nextIndex < allSections.length) {\n          const nextElement = allSections[nextIndex][1];\n          if (nextElement) {\n            nextElement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n            nextElement.focus();\n          }\n        }\n      }\n    }\n  };\n  \n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"animate-pulse text-gray-500 dark:text-gray-400\">\n          Loading guide...\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-8 transition-colors duration-200\">\n      <div className=\"container mx-auto px-4 sm:px-6\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8 gap-4\">\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n              Proposal Guide\n            </h1>\n            <button\n              onClick={toggleAllSections}\n              className=\"flex items-center gap-2 px-4 py-2 text-sm font-medium rounded-lg bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors border border-gray-200 dark:border-gray-700 shadow-sm\"\n              aria-label={isAllExpanded ? 'Collapse all sections' : 'Expand all sections'}\n            >\n              {isAllExpanded ? (\n                <>\n                  <ChevronUpIcon className=\"h-4 w-4\" />\n                  <span>Collapse All</span>\n                </>\n              ) : (\n                <>\n                  <ChevronDownIcon className=\"h-4 w-4\" />\n                  <span>Expand All</span>\n                </>\n              )}\n            </button>\n          </div>\n\n          <div className=\"space-y-6\">\n            {isLoading ? (\n              <div className=\"text-center py-8\">\n                <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500 mb-2\"></div>\n                <p className=\"text-gray-500 dark:text-gray-400\">Loading guide content...</p>\n              </div>\n            ) : (\n              <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 space-y-6\">\n                <div>\n                  <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white mb-4\">Proposal Development Guide</h2>\n                  <p className=\"text-gray-600 dark:text-gray-300\">\n                    This guide will walk you through the complete proposal development process, from initial opportunity identification to final submission.\n                  </p>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"border-l-4 border-blue-500 pl-4 py-1\">\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">1. Opportunity Identification</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      Research and identify potential opportunities that align with your organization's capabilities.\n                    </p>\n                  </div>\n\n                  <div className=\"border-l-4 border-green-500 pl-4 py-1\">\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">2. Capture Planning</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      Develop win strategies, identify key personnel, and prepare for the proposal process.\n                    </p>\n                  </div>\n\n                  <div className=\"border-l-4 border-purple-500 pl-4 py-1\">\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">3. Proposal Development</h3>\n                    <div className=\"prose dark:prose-invert max-w-none text-gray-600 dark:text-gray-300 space-y-4\">\n                      <div>\n                        <h4 className=\"font-semibold text-purple-700 dark:text-purple-300\">Step 1: Research Agency Goals</h4>\n                        <ul className=\"list-disc pl-5 space-y-1\">\n                          <li>Use ChatGPT to research the <span className=\"font-semibold\">[Agency]</span>'s strategic goals</li>\n                          <li>Extract key priorities (e.g., sustainability, cost efficiency, innovation)</li>\n                          <li>Ensure the proposal directly addresses these priorities</li>\n                          <li><span className=\"font-semibold\">Documentation:</span> Save all research outputs to the shared repository with proper version control</li>\n                        </ul>\n                      </div>\n\n                      <div>\n                        <h4 className=\"font-semibold text-purple-700 dark:text-purple-300\">Step 2: Team Discussion on Value Alignment</h4>\n                        <ul className=\"list-disc pl-5 space-y-1\">\n                          <li>Collaborate with agents to answer key questions:</li>\n                          <ul className=\"list-[circle] pl-5 mt-1 space-y-1\">\n                            <li>\"How can we increase our value proposition for this requirement?\"</li>\n                            <li>\"What specific objectives is the <span className=\"font-semibold\">[Agency]</span> prioritizing?\"</li>\n                          </ul>\n                          <li className=\"italic\">Example: If the <span className=\"font-semibold\">[Agency]</span> is the DoD, emphasize sustainability goals</li>\n                          <li><span className=\"font-semibold\">Documentation:</span> Record meeting minutes and decisions in the shared repository</li>\n                        </ul>\n                      </div>\n\n                      <div>\n                        <h4 className=\"font-semibold text-purple-700 dark:text-purple-300\">Step 3: Create Evaluation-Aligned TOC</h4>\n                        <ul className=\"list-disc pl-5 space-y-1\">\n                          <li>Draft a TOC that mirrors the solicitation's <span className=\"font-semibold\">evaluation criteria</span></li>\n                          <li>Create a <span className=\"font-semibold\">master checklist</span> of all agency-requested elements</li>\n                          <li>Ensure each section is airtight and competitive</li>\n                          <li>Tailor content to the bid's scoring rubric</li>\n                          <li><span className=\"font-semibold\">Compliance Check:</span> Verify TOC alignment with solicitation requirements</li>\n                        </ul>\n                      </div>\n\n                      <div>\n                        <h4 className=\"font-semibold text-purple-700 dark:text-purple-300\">Step 4: Apply Formatting & Alignment</h4>\n                        <ul className=\"list-disc pl-5 space-y-1\">\n                          <li>Format all content in MLA style</li>\n                          <li>Align <span className=\"font-semibold\">RARE EARTH LTD</span>'s capabilities with requirements</li>\n                        </ul>\n                      </div>\n\n                      <div>\n                        <h4 className=\"font-semibold text-purple-700 dark:text-purple-300\">Step 5: Adhere to Government Requirements</h4>\n                        <ul className=\"list-disc pl-5 space-y-1\">\n                          <li>Partner with <span className=\"font-semibold\">[Name of Company]</span> (include website if available)</li>\n                          <li>Use <span className=\"font-semibold\">exact</span> language, section labels, and formatting from the solicitation</li>\n                          <li className=\"italic\">Example: If the solicitation says \"Section 3.1: Technical Approach,\" replicate it verbatim</li>\n                        </ul>\n                      </div>\n\n                      <div>\n                        <h4 className=\"font-semibold text-purple-700 dark:text-purple-300\">Step 6: Review & Optimize with AI</h4>\n                        <ul className=\"list-disc pl-5 space-y-1\">\n                          <li>Upload evaluation criteria to Claude AI</li>\n                          <li>For each section:\n                            <ul className=\"list-[circle] pl-5 mt-1 space-y-1\">\n                              <li>Transform negative language into positive framing</li>\n                              <li>Use formal, active voice</li>\n                            </ul>\n                          </li>\n                          <li>Generate compliance matrix for cross-verification</li>\n                        </ul>\n                      </div>\n\n                      <div>\n                        <h4 className=\"font-semibold text-purple-700 dark:text-purple-300 mt-6\">Step 6.5: Peer Review Process</h4>\n                        <ul className=\"list-disc pl-5 space-y-1\">\n                          <li>Assign peer reviewers for each section</li>\n                          <li>Conduct <span className=\"font-semibold\">red team review</span> for critical sections</li>\n                          <li>Document all feedback and required changes</li>\n                          <li>Update compliance matrix with review outcomes</li>\n                        </ul>\n                      </div>\n\n                      <div>\n                        <h4 className=\"font-semibold text-purple-700 dark:text-purple-300\">Step 7: Quality Control & Finalization</h4>\n                        <ul className=\"list-disc pl-5 space-y-1\">\n                          <li>Conduct <span className=\"font-semibold\">final compliance verification</span> against all solicitation requirements</li>\n                          <li>Execute <span className=\"font-semibold\">quality control checklist</span>:\n                            <ul className=\"list-[circle] pl-5 mt-1 space-y-1\">\n                              <li>Verify all agency-requested elements are addressed</li>\n                              <li>Confirm MLA formatting compliance</li>\n                              <li>Check section numbering and references</li>\n                              <li>Validate all hyperlinks and cross-references</li>\n                            </ul>\n                          </li>\n                          <li>Identify section-by-section weaknesses</li>\n                          <li>Brainstorm improvements with agents</li>\n                          <li>Revise with persuasive language to maximize scores</li>\n                          <li><span className=\"font-semibold\">Final Verification:</span> Conduct pre-submission review against master checklist</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"border-l-4 border-yellow-500 pl-4 py-1\">\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">4. Submission</h3>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      Ensure all requirements are met and submit your proposal before the deadline.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                  <h4 className=\"font-medium text-blue-800 dark:text-blue-200 mb-2\">Pro Tip</h4>\n                  <p className=\"text-blue-700 dark:text-blue-300 text-sm\">\n                    Use the expand/collapse buttons to navigate through different sections of the guide. Each section contains detailed information and best practices.\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Guide;\n"],"names":["ChevronDownIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","ChevronDownIcon$1","ChevronUpIcon","ChevronUpIcon$1","usePersistedState","key","defaultValue","state","setState","useState","saved","useEffect","e","Guide","expandedState","setExpandedState","isAllExpanded","setIsAllExpanded","isLoading","setIsLoading","useRef","timer","useCallback","path","isExpanding","prev","newState","current","i","lastKey","toggleAllSections","jsx","jsxs","Fragment"],"mappings":"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","x_google_ignoreList":[0,1]}