{"version":3,"file":"enqueue.c7bc3081.js","sources":["../../src/lib/enqueue.js"],"sourcesContent":["// Safely get environment variables that works in the browser\nfunction getEnvVar(name, defaultValue = '') {\n  // In Vite, environment variables are available under import.meta.env\n  if (typeof import.meta !== 'undefined' && import.meta.env) {\n    return import.meta.env[name] || defaultValue;\n  }\n  // Fallback to empty string if import.meta.env is not available\n  return defaultValue;\n}\n\n// Prefer explicit queue URL; fall back to GAS proxy; then legacy enqueue endpoint\nconst QUEUE_URL = getEnvVar('VITE_QUEUE_URL')\n  || getEnvVar('VITE_GAS_PROXY')\n  || getEnvVar('VITE_ENQUEUE_ENDPOINT');\nconst QUEUE_TOKEN = getEnvVar('VITE_QUEUE_TOKEN');\n\nexport async function enqueue(jobOrArray) {\n  if (typeof window === 'undefined') {\n    // Skip during SSR/build\n    return { id: 'build-skip', status: 'skipped' };\n  }\n\n  if (!QUEUE_URL) {\n    console.warn('Missing VITE_QUEUE_URL or VITE_ENQUEUE_ENDPOINT in environment variables');\n    return { id: 'no-queue-url', status: 'error', error: 'Queue URL not configured' };\n  }\n  \n  if (!QUEUE_TOKEN) {\n    console.warn('Missing VITE_QUEUE_TOKEN in environment variables');\n    return { id: 'no-queue-token', status: 'error', error: 'Queue token not configured' };\n  }\n  \n  const jobs = Array.isArray(jobOrArray) ? jobOrArray : [jobOrArray];\n  const url = `${QUEUE_URL}?fn=enqueue`;\n  \n  try {\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: { \n        'Content-Type': 'application/json', \n        'X-Queue-Token': QUEUE_TOKEN \n      },\n      body: JSON.stringify({ jobs })\n    });\n\n    if (!res.ok) {\n      const text = await res.text().catch(() => '');\n      throw new Error(`enqueue failed ${res.status}: ${text || res.statusText}`);\n    }\n    \n    return await res.json().catch(() => ({}));\n  } catch (error) {\n    if (error.message.includes('<!DOCTYPE')) {\n      throw new Error('Server returned HTML instead of JSON. Check if the endpoint URL is correct.');\n    }\n    throw error;\n  }\n}\n\n// Plural helper for batching multiple jobs\nexport async function enqueueJobs(jobs) {\n  if (!Array.isArray(jobs)) {\n    throw new Error(\"enqueueJobs expects an array of jobs\");\n  }\n\n  const results = [];\n  for (const job of jobs) {\n    results.push(await enqueue(job));\n  }\n  return results;\n}\n\n/**\n * Check connectivity to the enqueue endpoint\n * @returns {Promise<Object>} Object with connection status\n */\nexport async function checkConnectivity() {\n  if (typeof window === 'undefined') {\n    // Skip during SSR/build\n    return {\n      connected: true,\n      status: 'skipped',\n      message: 'Skipping connectivity check during build'\n    };\n  }\n\n  if (!QUEUE_URL) {\n    return {\n      connected: false,\n      status: 'error',\n      error: 'Missing VITE_QUEUE_URL or VITE_ENQUEUE_ENDPOINT in environment variables',\n    };\n  }\n\n  if (!QUEUE_TOKEN) {\n    return {\n      connected: false,\n      status: 'error',\n      error: 'Missing VITE_QUEUE_TOKEN in environment variables',\n    };\n  }\n\n  try {\n    const response = await fetch(QUEUE_URL, {\n      method: 'HEAD',\n      headers: QUEUE_TOKEN ? { 'X-Queue-Token': QUEUE_TOKEN } : {}\n    });\n\n    return {\n      ok: response.ok,\n      status: response.status,\n      statusText: response.statusText,\n      lastChecked: new Date().toISOString()\n    };\n  } catch (error) {\n    return {\n      ok: false,\n      status: 0,\n      statusText: error.message,\n      lastChecked: new Date().toISOString()\n    };\n  }\n}\n"],"names":["getEnvVar","name","defaultValue","QUEUE_URL","QUEUE_TOKEN","enqueue","jobOrArray","jobs","url","res","text","error","checkConnectivity","response"],"mappings":"AACA,SAASA,EAAUC,EAAMC,EAAe,GAAI,CAE1C,OAAI,OAAO,YAAgB,KAAe,CAAA,cAAA,kBAAA,eAAA,0DAAA,iBAAA,SAAA,aAAA,kHAAA,gBAAA,0DAAA,eAAA,0DAAA,uBAAA,oCAAA,SAAA,kBAAA,KAAA,aAAA,IAAA,GAAA,KAAA,GAAA,IAAA,EAAA,GACjC,CAAe,cAAA,kBAAA,eAAA,0DAAA,iBAAA,SAAA,aAAA,kHAAA,gBAAA,0DAAA,eAAA,0DAAA,uBAAA,oCAAA,SAAA,kBAAA,KAAA,aAAA,IAAA,GAAA,KAAA,GAAA,IAAA,EAAA,EAACD,CAAI,GAAKC,CAIpC,CAGA,MAAMC,EAAYH,EAAU,gBAAgB,GACvCA,EAAU,gBAAgB,GAC1BA,EAAU,uBAAuB,EAChCI,EAAcJ,EAAU,kBAAkB,EAEzC,eAAeK,EAAQC,EAAY,CACxC,GAAI,OAAO,OAAW,IAEpB,MAAO,CAAE,GAAI,aAAc,OAAQ,SAAS,EAG9C,GAAI,CAACH,EACH,eAAQ,KAAK,0EAA0E,EAChF,CAAE,GAAI,eAAgB,OAAQ,QAAS,MAAO,4BAGvD,GAAI,CAACC,EACH,eAAQ,KAAK,mDAAmD,EACzD,CAAE,GAAI,iBAAkB,OAAQ,QAAS,MAAO,8BAGzD,MAAMG,EAAO,MAAM,QAAQD,CAAU,EAAIA,EAAa,CAACA,CAAU,EAC3DE,EAAM,GAAGL,CAAS,cAExB,GAAI,CACF,MAAMM,EAAM,MAAM,MAAMD,EAAK,CAC3B,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,gBAAiBJ,CAClB,EACD,KAAM,KAAK,UAAU,CAAE,KAAAG,CAAI,CAAE,CACnC,CAAK,EAED,GAAI,CAACE,EAAI,GAAI,CACX,MAAMC,EAAO,MAAMD,EAAI,KAAM,EAAC,MAAM,IAAM,EAAE,EAC5C,MAAM,IAAI,MAAM,kBAAkBA,EAAI,MAAM,KAAKC,GAAQD,EAAI,UAAU,EAAE,CAC1E,CAED,OAAO,MAAMA,EAAI,KAAI,EAAG,MAAM,KAAO,CAAE,EAAC,CACzC,OAAQE,EAAO,CACd,MAAIA,EAAM,QAAQ,SAAS,WAAW,EAC9B,IAAI,MAAM,6EAA6E,EAEzFA,CACP,CACH,CAmBO,eAAeC,GAAoB,CACxC,GAAI,OAAO,OAAW,IAEpB,MAAO,CACL,UAAW,GACX,OAAQ,UACR,QAAS,0CACf,EAGE,GAAI,CAACT,EACH,MAAO,CACL,UAAW,GACX,OAAQ,QACR,MAAO,0EACb,EAGE,GAAI,CAACC,EACH,MAAO,CACL,UAAW,GACX,OAAQ,QACR,MAAO,mDACb,EAGE,GAAI,CACF,MAAMS,EAAW,MAAM,MAAMV,EAAW,CACtC,OAAQ,OACR,QAASC,EAAc,CAAE,gBAAiBA,CAAa,EAAG,CAAE,CAClE,CAAK,EAED,MAAO,CACL,GAAIS,EAAS,GACb,OAAQA,EAAS,OACjB,WAAYA,EAAS,WACrB,YAAa,IAAI,KAAM,EAAC,YAAa,CAC3C,CACG,OAAQF,EAAO,CACd,MAAO,CACL,GAAI,GACJ,OAAQ,EACR,WAAYA,EAAM,QAClB,YAAa,IAAI,KAAM,EAAC,YAAa,CAC3C,CACG,CACH"}