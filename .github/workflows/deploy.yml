# CI Step Order:
# 1) actions/checkout@v3
# 2) actions/setup-node@v3 (node-version: '18')
# 3) actions/cache@v3 (npm)
# 4) npm ci
# 5) npm run build
# 6) cp dist/index.html dist/404.html (here via npm run copy-404)
# 7) npx gh-pages ... --branch gh-pages

name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: Checkout
        uses: actions/checkout@v3

      # 2) Setup Node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # 3) Cache npm
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4) Install
      - name: Install dependencies
        run: npm ci

      # 5) Build
      - name: Build
        run: npm run build

      # 5.5) (Optional) HTML validation â€” left commented until opt-in
      # - name: Validate HTML (optional)
      #   uses: html-validate/html-validate-action@v1.3.0
      #   with:
      #     path: dist

      # 6) Cross-platform 404 fallback copy (no Windows 'copy')
      - name: Create 404 fallback
        run: npm run copy-404

      # 7) Configure Git for GitHub Actions
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # 8) Publish to gh-pages
      - name: Publish to gh-pages
        run: npx gh-pages -d dist --branch gh-pages --dotfiles
